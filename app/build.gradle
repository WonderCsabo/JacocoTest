apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'jacoco'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.example.jacoco"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
    }
}

configurations {
    sharedTestImplementation
    testImplementation.extendsFrom sharedTestImplementation
    androidTestImplementation.extendsFrom sharedTestImplementation
}

dependencies {
    implementation project(":lib")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    sharedTestImplementation 'junit:junit:4.13.1'
    sharedTestImplementation 'androidx.test:rules:1.3.0'
    sharedTestImplementation 'androidx.test.ext:junit:1.1.2'
    sharedTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation 'org.robolectric:robolectric:4.4'
}

jacoco {
    toolVersion = "0.8.6"
    reportsDir = file("${buildDir}/reports")
}

tasks.withType(Test) {
    jacoco {
        includeNoLocationClasses = true
    }
}

tasks.register("testDebugUnitTestCoverage", JacocoReport) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories.setFrom(files("${buildDir}/tmp/kotlin-classes/debug"))
    sourceDirectories.setFrom(files("${projectDir}/src/main/java"))

    executionData.setFrom(files("${buildDir}/jacoco/testDebugUnitTest.exec"))

    dependsOn("testDebugUnitTest")
}

tasks.register("connectedDebugAndroidTestCoverage", JacocoReport) {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    classDirectories.setFrom(files("${buildDir}/tmp/kotlin-classes/debug"))
    sourceDirectories.setFrom(files("${projectDir}/src/main/java"))

    executionData.setFrom(files(project.fileTree(buildDir) {
        include("outputs/code_coverage/connectedDebugAndroidTest/connected/*coverage.ec")
    }))

    dependsOn("connectedDebugAndroidTest")
}
